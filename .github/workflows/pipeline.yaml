jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build

  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput=./test_coverage/ -l trx -r ./test_result/

  analyze:
    needs:
      - build
      - test
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install --global dotnet-sonarscanner --version 5.2.1
      - run: dotnet sonarscanner begin -k:'maman0022_pizzabox-web' -o:'maman0022' -d:sonar.login=$SONAR_TOKEN -d:sonar.host.url='https://sonarcloud.io'
      - run: dotnet build
      - run: dotnet sonarscanner end -d:sonar.login=$SONAR_TOKEN

  package:
    needs:
      - analyze
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: docker login
      - run: docker image build -f Dockerfile -t pizzabox .
      - run: docker image tag pizzabox maman0022/pizzabox
      - run: docker push maman0022/pizzabox
      - run: docker logout

name: ci-pipeline

on: push
