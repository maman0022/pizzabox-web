jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build

  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput=./test_coverage/ -l trx -r ./test_result/

  analyze:
    needs:
      - build
      - test
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install --global dotnet-sonarscanner --version 5.2.1
      - run: dotnet sonarscanner begin -k:'maman0022_pizzabox-web' -o:'maman0022' -d:sonar.login=$SONAR_TOKEN -d:sonar.host.url='https://sonarcloud.io'
      - run: dotnet build
      - run: dotnet sonarscanner end -d:sonar.login=$SONAR_TOKEN

  package:
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
    needs:
      - analyze
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: docker image build -f Dockerfile -t pizzabox-web .
      - run: docker image tag pizzabox-web maman0022/pizzabox-web
      - run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker push maman0022/pizzabox-web
      - run: docker logout

  build:
    env:
      EMAIL: ${{ secrets.EMAIL }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: $HEROKU_API_KEY
          heroku_app_name: "pizzabox-web"
          heroku_email: $EMAIL
          usedocker: true

name: ci-pipeline

on: push
